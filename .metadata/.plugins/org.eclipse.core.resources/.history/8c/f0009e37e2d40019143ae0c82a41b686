package hw2;
import java.util.Scanner;
import java.util.Date;

public class AttackMonitor {
	 Scanner input = new Scanner(System.in);
	 MonsterAttack[] attacks = new MonsterAttack[5];

	public MonsterAttack[] reportAttacks() {
		for (int  i = 0; i < attacks.length; i++) {
			System.out.println("Attack "+ (i+1)+":");
			System.out.println("Please enter the monster name: ");
			attacks[i].setMonsterName("bruh");
			System.out.println("Please enter the attack location: ");
			attacks[i].setMonsterLocation(input.nextLine());
			System.out.println("Please enter the attack damages cost in millions USD: ");
			attacks[i].setMonsterDamage(input.nextDouble());
			System.out.println("Please enter the month of the attack with numbers (Ex: 1 for January): ");
			int month = input.nextInt();
			System.out.println("Please enter the day of the attack");
			int day = input.nextInt();
			System.out.println("Please enter all four digits of the year of the attack (Ex: 2019)");
			int year = input.nextInt();
			attacks[i].setMonsterDate(month, day, year);
		}
		return attacks;
		
	}
	
	public void showAttack() { 
		for (int i = 0; i < attacks.length; i++) {
			System.out.println("Attack "+ (i+1) + " :");
			System.out.println("Monster Name: " + attacks[i].getMonsterName());
			System.out.println("Attack Location: " + attacks[i].getMonsterLocation());
			System.out.println("Attack Date: " + attacks[i].getMonsterDate().toString());
			System.out.println("Damages in Million USD: " + attacks[i].getMonsterDamage());
		}
	}
	
	public void showDamages() {	
		double totalDamages = 0;
		for (int i = 0; i < attacks.length; i++) {
			totalDamages += attacks[i].getMonsterDamage();
		}
		System.out.println("The total amount of all attacks in millions USD is " + totalDamages);
		System.out.println("The mean of the damages in millions USD is " + (totalDamages/5));
	}
	
	public void showMonsters() {
		String[] monsterNames = new String[5];
		String[] result = new String[5];
		int counter  = 0;
		int count = 0;
		for  (int i = 0; i < attacks.length; i++) {
			monsterNames[i] = attacks[i].getMonsterName(); 
		}
		for (int j = 0; j < monsterNames.length; j++) {
			boolean isDistinct = false;
			for (int k = 0; k < j; k++) {
				if (monsterNames[j].equals(monsterNames[k])) {
					isDistinct = true;
					break;
				}
				if (!isDistinct) {
					result[counter++] = monsterNames[j];
				}
			}
		}
		for (int l = 0; l < counter; l++) {
			count = 0;
			for (int m = 0; m < monsterNames.length; m++) {
				if(result[l].equals(monsterNames[m])) {
					count++;
				}
			}
			System.out.println(result[l]+": " + count + " attack(s)");
		}
	}
	
	public void findEarliestAttack() {
		Date[] dates = new Date[5]; 
		Date min = new Date();
		for (int i = 0; i < attacks.length; i++) {
			dates[i] = attacks[i].getMonsterDate();
		}
		for (int j = 0; j < dates.length; j++) {
			if (dates[j].before(min)) {
				min = dates[j];
			}
		}
		System.out.println("Earliest attack: " + min.toString());
	}
}


