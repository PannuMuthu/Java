package application;
	

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.stage.Stage;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.control.Label;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.control.ToolBar;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;


public class Main extends Application {
	@Override
	public void start(Stage primaryStage) {
		try {
			BorderPane root = new BorderPane();
			GridPane table = new GridPane();
			table.setPadding(new Insets(9,15,0,0));
			Button set = new Button("Find Problems");
			TextField in = new TextField();
			table.setHgap(20);
			table.setVgap(20);
			ToolBar input = new ToolBar(
				new Label("Enter Answer: "), 
				in,
				set
			);
			input.setPadding(new Insets(15, 15, 15, 15));
			VBox index = new VBox(20);
			index.setPadding(new Insets(9,15,15,15));
			for (int i = 0; i <= 10; i++) {
				Label indexString = new Label("     "+String.valueOf(i));
				index.getChildren().addAll(indexString);
			}
			
			for (int i = 0; i <= 10; i++) {
				for (int j = 0; j <= 10; j++) { 
					if (i == 0 && j != 0) {
						Label indexH = new Label(String.valueOf(j));
						table.add(indexH, j, 0);
					} else if (j != 0) {
						Label mult = new Label(String.valueOf(i)+ "*" + String.valueOf(j));
						table.add(mult, j, i);
					}
					
				}
			}
			set.setOnAction(new EventHandler <ActionEvent>(){
				@Override
				public void handle(ActionEvent event) {
					for (int row = 1; row <= 10; row++) {
						for (int column = 1; column <= 10; column++) {
							getNodeFromGridPane(table,column,row).setStyle("-fx-background-color: transparent;");

						}
					}
					
					int answer = Integer.parseInt(in.getText());
					for (int i = 0; i <= 10; i++) {
						for (int j = 0; j <= 10; j++) {
							if (i * j == answer) {
								getNodeFromGridPane(table,j, i).setStyle("-fx-background-color: #FF0000;");
							}
						}
					}
				}
			});
			root.setTop(input);
			root.setLeft(index);
			root.setCenter(table);
			Scene scene = new Scene(root,575,475);
			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
			primaryStage.setScene(scene);
			primaryStage.setResizable(false);
			primaryStage.show();
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	private Node getNodeFromGridPane(GridPane gridPane, int col, int row) {
	    for (Node node : gridPane.getChildren()) {
	        if (GridPane.getColumnIndex(node) == col && GridPane.getRowIndex(node) == row) {
	            return node;
	        }
	    }
	    return null;
	}
	
	public static void main(String[] args) {
		launch(args);
	}
}
